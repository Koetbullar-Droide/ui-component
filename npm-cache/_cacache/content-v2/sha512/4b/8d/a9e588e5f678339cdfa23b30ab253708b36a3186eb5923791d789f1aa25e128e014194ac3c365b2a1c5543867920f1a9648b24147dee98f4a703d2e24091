{
  "_id" : "asynciterator.prototype",
  "_rev" : "1-0",
  "name" : "asynciterator.prototype",
  "description" : "`AsyncIterator.prototype`, or a shared object to use.",
  "dist-tags" : {
    "latest" : "1.0.0"
  },
  "versions" : {
    "1.0.0" : {
      "name" : "asynciterator.prototype",
      "description" : "`AsyncIterator.prototype`, or a shared object to use.",
      "version" : "1.0.0",
      "author" : {
        "name" : "Jordan Harband",
        "email" : "ljharb@gmail.com"
      },
      "homepage" : "https://github.com/ljharb/AsyncIterator.prototype#readme",
      "repository" : {
        "type" : "git",
        "url" : "git+https://github.com/ljharb/AsyncIterator.prototype.git"
      },
      "bugs" : {
        "url" : "https://github.com/ljharb/AsyncIterator.prototype/issues"
      },
      "main" : "index.js",
      "dependencies" : {
        "has-symbols" : "^1.0.3"
      },
      "devDependencies" : {
        "@ljharb/eslint-config" : "^21.0.0",
        "aud" : "^2.0.1",
        "auto-changelog" : "^2.4.0",
        "eslint" : "=8.8.0",
        "evalmd" : "^0.0.19",
        "in-publish" : "^2.0.1",
        "npmignore" : "^0.3.0",
        "safe-publish-latest" : "^2.0.0",
        "tape" : "^5.6.1"
      },
      "keywords" : [ "ecmascript", "javascript", "AsyncIterator", "AsyncIterator.prototype", "async", "iterator", "prototype" ],
      "license" : "MIT",
      "maintainers" : [ {
        "name" : "ljharb",
        "email" : "ljharb@gmail.com"
      } ],
      "directories" : { },
      "scripts" : {
        "prepack" : "npmignore --auto --commentLines=autogenerated",
        "prepublishOnly" : "safe-publish-latest",
        "prepublish" : "not-in-publish || npm run prepublishOnly",
        "prelint" : "evalmd README.md",
        "lint" : "eslint --ext=js,mjs .",
        "pretest" : "npm run lint",
        "tests-only" : "tape 'test/**/*.js'",
        "test" : "npm run tests-only",
        "posttest" : "aud --production",
        "version" : "auto-changelog && git add CHANGELOG.md",
        "postversion" : "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
      },
      "publishConfig" : {
        "ignore" : [ ".github/workflows" ]
      },
      "_npmVersion" : "8.19.3",
      "_npmUser" : {
        "name" : "ljharb",
        "email" : "ljharb@gmail.com"
      },
      "_id" : "asynciterator.prototype@1.0.0",
      "dist" : {
        "tarball" : "https://bin.swisscom.com/artifactory/api/npm/swisscom-npm-virtual/asynciterator.prototype/-/asynciterator.prototype-1.0.0.tgz",
        "shasum" : "8c5df0514936cdd133604dfcc9d3fb93f09b2b62",
        "integrity" : "sha512-wwHYEIS0Q80f5mosx3L/dfG5t5rjEa9Ft51GTaNt862EnpyGHpgz2RkZvLPp1oF5TnAiTohkEKVEu8pQPJI7Vg=="
      },
      "gitHead" : "d6c6aaa18549caa686886e4daf114a03b07c0906",
      "exports" : {
        "." : "./index.js",
        "./package.json" : "./package.json"
      },
      "testling" : {
        "files" : "test/index.js"
      },
      "_hasShrinkwrap" : false,
      "_npmOperationalInternal" : {
        "host" : "s3://npm-registry-packages",
        "tmp" : "tmp/asynciterator.prototype_1.0.0_1670620721200_0.9636799765517898"
      },
      "auto-changelog" : {
        "output" : "CHANGELOG.md",
        "template" : "keepachangelog",
        "unreleased" : false,
        "commitLimit" : false,
        "backfillLimit" : false,
        "hideCredit" : true
      },
      "_nodeVersion" : "19.2.0"
    }
  },
  "readme" : "# asynciterator.prototype <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\n\n[![github actions][actions-image]][actions-url]\n[![coverage][codecov-image]][codecov-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][package-url]\n\n`AsyncIterator.prototype`, or a shared object to use.\n\n## Usage\n\n```javascript\nvar asyncIterProto = require('asynciterator.prototype');\nvar assert = require('assert');\n\nif (typeof AsyncIterator === 'function') {\n    assert.equal(AsyncIterator.prototype, asyncIterProto);\n}\n```\n\n[package-url]: https://npmjs.org/package/asynciterator.prototype\n[npm-version-svg]: https://versionbadg.es/ljharb/AsyncIterator.prototype.svg\n[deps-svg]: https://david-dm.org/ljharb/AsyncIterator.prototype.svg\n[deps-url]: https://david-dm.org/ljharb/AsyncIterator.prototype\n[dev-deps-svg]: https://david-dm.org/ljharb/AsyncIterator.prototype/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/AsyncIterator.prototype#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/asynciterator.prototype.png?downloads=true&stars=true\n[license-image]: https://img.shields.io/npm/l/asynciterator.prototype.svg\n[license-url]: LICENSE\n[downloads-image]: https://img.shields.io/npm/dm/asynciterator.prototype.svg\n[downloads-url]: https://npm-stat.com/charts.html?package=asynciterator.prototype\n[codecov-image]: https://codecov.io/gh/ljharb/AsyncIterator.prototype/branch/main/graphs/badge.svg\n[codecov-url]: https://app.codecov.io/gh/ljharb/AsyncIterator.prototype/\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/AsyncIterator.prototype\n[actions-url]: https://github.com/AsyncIterator/iterator.prototype/actions\n",
  "maintainers" : [ {
    "name" : "ljharb",
    "email" : "ljharb@gmail.com"
  } ],
  "author" : {
    "name" : "Jordan Harband",
    "email" : "ljharb@gmail.com"
  },
  "time" : {
    "created" : "2022-12-09T21:18:41.199Z",
    "modified" : "2022-12-09T21:18:41.492Z",
    "1.0.0" : "2022-12-09T21:18:41.352Z"
  },
  "repository" : {
    "type" : "git",
    "url" : "git+https://github.com/ljharb/AsyncIterator.prototype.git"
  },
  "users" : { },
  "readmeFilename" : "README.md",
  "homepage" : "https://github.com/ljharb/AsyncIterator.prototype#readme",
  "keywords" : [ "ecmascript", "javascript", "AsyncIterator", "AsyncIterator.prototype", "async", "iterator", "prototype" ],
  "bugs" : {
    "url" : "https://github.com/ljharb/AsyncIterator.prototype/issues"
  },
  "license" : "MIT"
}